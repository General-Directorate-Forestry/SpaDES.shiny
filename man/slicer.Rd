% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slicer.R
\name{slicerUI}
\alias{slicerUI}
\alias{slicer}
\title{Slicer Module}
\usage{
slicerUI(id)

slicer(input, output, session, data, globalData, categoryValue, uiSequence,
  serverFunction, uiFunction)
}
\arguments{
\item{id}{An ID string that corresponds with the ID used to call the module's UI function}

\item{input}{Shiny server input object.}

\item{output}{Shiny server output object.}

\item{session}{Shiny server session object.}

\item{data}{Reactive value containing data in form of a \code{data.table}.
For each row from \code{uiSequence} argument, a set of subtables
is created. Each subtable is a subset of data with fixed value
for one dimension.}

\item{globalData}{Reactive value containing data in form of a \code{data.table}.
This is the data table from the beginning, i.e. before any slices
were made. This is helpful if the end summary function requires
information about already sliced dimensions.}

\item{categoryValue}{Each time the data table is sliced (one dimension is cut off),
concrete value of the category is set. This argument stores this value.}

\item{uiSequence}{A \code{data.table} of the form
\code{data.table(category = list_of_categories, uiType = list_of_ui_actions)}.
Both lists should contain elements of type character.
Currently there are two possible actions to perform: "tab" and "box".
Action "box": should be used only together with \pkg{shinydashboard}.
An example of proper \code{uiSequence} is
\code{data.table(category = c("Alliance", "Kingdom"),
                 uiType = c("tab", "box"))}}

\item{serverFunction}{A summary module server function. This function will be applied to
extracted m-dimensional data table. Should correspond to \code{uiFunction}.}

\item{uiFunction}{A summary module function UI. This function will be applied to
extracted m-dimensional data table. Should correspond to \code{serverFunction}.}
}
\value{
Shiny module UI.

Shiny module server function.
}
\description{
Shiny module used to: \cr
             1. extract an m-dimensional data table
             from an n-dimensional data table, where n > m \cr
             2. simultanously, for each n-m dimension, create desired UI (e.g. tabs) \cr
             3. Do a summary (e.g. create a plot) based on extracted m-dimensional data table
}
\examples{
\dontrun{
library(shiny)
library(shinydashboard)
library(SpaDES.shiny)
library(data.table)

DT <- data.table(Alliance = c("Last Alliance of Elves and Men",
                              "Last Alliance of Elves and Men",
                              "Last Alliance of Elves and Men",
                              "Mordor",
                              "Mordor",
                              "Mordor",
                              "Saruman"),
                 Race = c("Elves", "Men", "Men", "Orcs", "Orcs", "Nasguls", "Uruk-hai"),
                 City = c("Rivendel", "Rohan", "Gondor", "Mordor",
                          "Moria", "Mordor", "Isengard"),
                 Forces = 22: 28)

uiSequence <- data.table(category = c("Alliance", "Race"), uiType = c("box", "tab"))

server <-
  function(input, output, session) {
    dt <- reactive(DT)

    callModule(slicer, "slicer", dt, "LOTR", uiSequence = uiSequence,
               serverFunction = function(data) {
                 callModule(histogram, "histogram", data[, Forces])
               },
               uiFunction = function(ns, data, categoryValue) {
                 histogramUI(ns("histogram"), height = 300)
               })
  }

ui <-
  dashboardPage(
    dashboardHeader(),
    dashboardSidebar(),
    dashboardBody(
      slicerUI("slicer")
    )
  )

shinyApp(ui, server)
}
}
\author{
Mateusz Wyszynski

Mateusz Wyszynski
}
