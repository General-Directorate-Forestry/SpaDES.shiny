% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polygonChooser.R
\name{polygonChooserUI}
\alias{polygonChooserUI}
\alias{polygonChooser}
\title{Shiny module for selecting a polygon to display an a map}
\usage{
polygonChooserUI(id)

polygonChooser(input, output, session, rctPolygonList, selectedPoly = NULL)
}
\arguments{
\item{id}{An ID string that corresponds with the ID used to call the module server function.}

\item{input}{Shiny server input object.}

\item{output}{Shiny server output object.}

\item{session}{Shiny server session object.}

\item{rctPolygonList}{A reactive nested list with the following structure:
# TODO: fill this in}

\item{selectedPoly}{The name of the polygon to select by default.}
}
\value{
A reactive containing the name of the selected polygon.
}
\description{
Provides a dropdown list of polygons available for mapping, sorted alphabetically.
}
\examples{
\dontrun{
library(leaflet)
library(magrittr)
library(shiny)
library(SpaDES.tools)

shinyApp(
  ui = fluidPage(
    leafletOutput("map"),
    polygonChooserUI("polyPicker")
  ),
  server = function(input, output, session) {
    dummyPoly <- function() {
      randomPolygon(matrix(c(-120, 60), ncol = 2), 100)
    }
    dummyPoly1 <- dummyPoly()
    dummyPoly2 <- dummyPoly()
    dummyPoly3 <- dummyPoly()
    polygonList <- reactive(list(caribou = dummyPoly1, ecozones = dummyPoly2, fmu = dummyPoly3))
    chosenPolyName <- callModule(polygonChooser, "polyPicker", polygonList, "ecozones")

    output$map <- renderLeaflet({
      leaflet() \%>\%
        addTiles() \%>\%
        addPolygons(data = polygonList()[[chosenPolyName()]])
    })
  }
)
}
}
\author{
Alex Chubaty
}
